@model BE.Medicine

@{
    ViewBag.Title = "AddDrug";
}

<br />
<br />
<br />

@using (Html.BeginForm("SaveNewDrug", "Drug"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Add Medicine</h2>
        <h6>please enter details to continue</h6>
        <br />
        <hr />
        <br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-md-2">Medicine ID</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MedecienId, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.MedecienId, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Producer, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Generic Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.GenericName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.GenericName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Active Ingredients</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActiveIngredients, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.ActiveIngredients, "", new { @class = "text-danger" })
            </div>
        </div>

       
        <div class="form-group">
            <label class="control-label col-md-2">Ndc</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ndc, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Ndc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Properties</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Properties, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Properties, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Image </label>
            <div class="col-md-3">
                <input type="file" class="custom-file-input  col-md-1 form-control" id="customFile" name="filename" onchange="changeLabel(this.value)" required>
                <label class="custom-file-label" id="fileLabel" for="customFile">Choose file</label>
            </div>
        </div>

        <br />
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary btn-lg" style="background-color:#83cd00;border-color:#83cd00;" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "DrugsList", "Drug", new { @class = "my-class" })
</div>


<style>
    a.my-class {
        color: #6ec000
    }

        a.my-class:active {
            color: #6ec000
        }

        a.my-class:link {
            color: #6ec000
        }

        a.my-class:visited {
            color: #6ec000
        }
</style>
@if (ViewBag.Message != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>

}
<script type="text/javascript">

    function changeLabel(src) {
        src = src.substring(src.lastIndexOf('\\') + 1, src.lenth);
        document.getElementById('fileLabel').innerHTML = src;

    }


</script>

