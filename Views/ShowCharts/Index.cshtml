@*@model IEnumerable<IEnumerable<int>>
        @{
            ViewBag.Title = "Index";
        }




        <!doctype html>
        <html>

        <head>
            <br />
            <br />

            <script src="~/Scripts/Chart.min.js"></script>
            <script src="~/Scripts/utils.js"></script>
            <style>
                canvas {
                    -moz-user-select: none;
                    -webkit-user-select: none;
                    -ms-user-select: none;
                }
            </style>

            <meta name="NetsparkQuiltingResult" total-length="4007" removed="0" rules-found="w2727,w3911,w3107,w5070" />
        </head>

        <body>
            <div style="width:85%;">
                <canvas id="canvas"></canvas>
            </div>
            <br>
            <br>

            <script>
                Chart.scaleService.updateScaleDefaults('linear', {
                    ticks: {
                        min: 0
                    }
                });
                var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
                var config = {
                    type: 'bar',
                    data: {
                        labels: ['January', 'February', 'March', 'April', 'May'],//, 'June', 'July','August', 'September', 'October', 'November', 'December'],
                        datasets: [
                            {
                                label: "@ViewBag.ChartTitle",

                                backgroundColor: window.chartColors.colorName,
                                borderColor: window.chartColors.Green,

                                data: [
                                @foreach (var item in Model)
                                {
                                   @:{
                                   @:label: "data@(DateTime.Now.ToString())",
                                   @:fill: false,
                                   @:backgroundColor: window.chartColors.red,
                                   @:borderColor: window.chartColors.blue,
                                   @:data: [ @foreach(var t in item) {  @(t+",") } ]
                                   @: }
                                   @:,

                              *
                              *
                              *
                              *
                              *
                              *  }

                                ],
                                fill: false,
                                //},
                                //{
                                //        label: "second data",
                                //        fill: false,
                                //        backgroundColor: window.chartColors.red,
                                //        borderColor: window.chartColors.red,
                                //        data: [1, 2, 3, 4, 5, 6, 7]
                                // },


                            },
                        ]
                    } ,

                    options: {
                        responsive: true,
                        title: {
                            display: true,
                            text: 'Chart.js Line Chart'
                        },
                        tooltips: {
                            mode: 'index',
                            intersect: false,
                        },
                        hover: {
                            mode: 'nearest',
                            intersect: true
                        },
                        scales: {
                            xAxes: [{
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Month'
                                }
                            }],
                            yAxes: [{
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Value'
                                }
                            }]
                        }
                    }
                };

                window.onload = function () {
                    var ctx = document.getElementById('canvas').getContext('2d');
                    window.myLine = new Chart(ctx, config);
                };

                //document.getElementById('randomizeData').addEventListener('click', function () {
                //    config.data.datasets.forEach(function (dataset) {
                //        dataset.data = dataset.data.map(function () {
                //            return randomScalingFactor();
                //        });

                //    });

                //    window.myLine.update();
                //});

                //var colorNames = Object.keys(window.chartColors);
                //document.getElementById('addDataset').addEventListener('click', function () {
                //    var colorName = colorNames[config.data.datasets.length % colorNames.length];
                //    var newColor = window.chartColors[colorName];
                //    var newDataset = {
                //        label: 'Dataset ' + config.data.datasets.length,
                //        backgroundColor: newColor,
                //        borderColor: newColor,
                //        data: [],
                //        fill: false
                //    };

                //    for (var index = 0; index < config.data.labels.length; ++index) {
                //        newDataset.data.push(randomScalingFactor());
                //    }

                //    config.data.datasets.push(newDataset);
                //    window.myLine.update();
                //});

                //document.getElementById('addData').addEventListener('click', function () {
                //    if (config.data.datasets.length > 0) {
                //        var month = MONTHS[config.data.labels.length % MONTHS.length];
                //        config.data.labels.push(month);

                //        config.data.datasets.forEach(function (dataset) {
                //            dataset.data.push(randomScalingFactor());
                //        });

                //        window.myLine.update();
                //    }
                //});

                //document.getElementById('removeDataset').addEventListener('click', function () {
                //    config.data.datasets.splice(0, 1);
                //    window.myLine.update();
                //});

                //document.getElementById('removeData').addEventListener('click', function () {
                //    config.data.labels.splice(-1, 1); // remove the label first

                //    config.data.datasets.forEach(function (dataset) {
                //        dataset.data.pop();
                //    });

                //    window.myLine.update();
                //});
            </script>
        </body>

        </html>
    @model IEnumerable<IEnumerable<int>>
    @{
        ViewBag.Title = "Index";
    }




    <!doctype html>
    <html>

    <head>
        <br />
        <br />

        <script src="~/Scripts/Chart.min.js"></script>
        <script src="~/Scripts/utils.js"></script>
        <style>
            canvas {
                -moz-user-select: none;
                -webkit-user-select: none;
                -ms-user-select: none;
            }
        </style>

        <meta name="NetsparkQuiltingResult" total-length="4007" removed="0" rules-found="w2727,w3911,w3107,w5070" />
    </head>

    <body>
        <div style="width:85%;">
            <canvas id="canvas"></canvas>
        </div>
        <br>
        <br>

        <script>
            Chart.scaleService.updateScaleDefaults('linear', {
                ticks: {
                    min: 0
                }
            });
            var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
            var config = {
                type: 'bar',
                data: {
                    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July','August', 'September', 'October', 'November', 'December'],
                    datasets: [

                        @foreach (var item in Model)
                         {
                             @:   {
                             @:   lable: "what",
                            /*
            var colorName = colorNames[config.data.datasets.length % colorNames.length];
    var newColor = window.chartColors[colorName];
    */
                            var colorNames = Object.keys(window.chartColors);
                            var colorName = colorNames[config.data.datasets.length % colorNames.length];
                            var newColor = window.chartColors[colorName];
                             @: backgroundColor: randomColorGenerator(),
                             @:   backgroundColor: window.chartColors.colorName,
                             @:   borderColor: window.chartColors.Green,
                             @:   data:[
                                    foreach (var x in item)
                                    {
                                        @(x.ToString() + ", ");

                                    }
                            @: ],
                            @:fill: false,
                            @:  },
                         }

                            ]

                },
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: 'Chart.js Line Chart'
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false,
                    },
                    hover: {
                        mode: 'nearest',
                        intersect: true
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Month'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Value'
                            }
                        }]
                    }
                }
            };

            window.onload = function () {
                var ctx = document.getElementById('canvas').getContext('2d');
                window.myLine = new Chart(ctx, config);
            };

            document.getElementById('randomizeData').addEventListener('click', function () {
                config.data.datasets.forEach(function (dataset) {
                    dataset.data = dataset.data.map(function () {
                        return randomScalingFactor();
                    });

                });

                window.myLine.update();
            });

            var colorNames = Object.keys(window.chartColors);
            document.getElementById('addDataset').addEventListener('click', function () {
                var colorName = colorNames[config.data.datasets.length % colorNames.length];
                var newColor = window.chartColors[colorName];
                var newDataset = {
                    label: 'Dataset ' + config.data.datasets.length,
                    backgroundColor: newColor,
                    borderColor: newColor,
                    data: [],
                    fill: false
                };

                for (var index = 0; index < config.data.labels.length; ++index) {
                    newDataset.data.push(randomScalingFactor());
                }

                config.data.datasets.push(newDataset);
                window.myLine.update();
            });

            document.getElementById('addData').addEventListener('click', function () {
                if (config.data.datasets.length > 0) {
                    var month = MONTHS[config.data.labels.length % MONTHS.length];
                    config.data.labels.push(month);

                    config.data.datasets.forEach(function (dataset) {
                        dataset.data.push(randomScalingFactor());
                    });

                    window.myLine.update();
                }
            });

            document.getElementById('removeDataset').addEventListener('click', function () {
                config.data.datasets.splice(0, 1);
                window.myLine.update();
            });

            document.getElementById('removeData').addEventListener('click', function () {
                config.data.labels.splice(-1, 1); // remove the label first

                config.data.datasets.forEach(function (dataset) {
                    dataset.data.pop();
                });

                window.myLine.update();
            });
        </script>
    </body>

    </html>*@

